<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DataFactory</name>
    </assembly>
    <members>
        <member name="T:DataFactory.ConnectionHelper">
            <summary>
            连接串生成类
            </summary>
        </member>
        <member name="M:DataFactory.ConnectionHelper.IsDBEnable(DataFactory.DBInfo)">
            <summary>
            是否启用数据库配置
            </summary>
            <param name="info">数据库信息</param>
            <returns>是否启用数据库配置</returns>
        </member>
        <member name="M:DataFactory.ConnectionHelper.getDbUrl(DataFactory.DBInfo)">
            <summary>
             数据库地址
            </summary>
            <param name="info">数据库信息</param>
            <returns>数据库地址</returns>
        </member>
        <member name="M:DataFactory.ConnectionHelper.getDbPort(DataFactory.DBInfo)">
            <summary>
             数据库端口
            </summary>
            <param name="info">数据库信息</param>
            <returns>数据库端口</returns>
        </member>
        <member name="M:DataFactory.ConnectionHelper.getDbUser(DataFactory.DBInfo)">
            <summary>
             数据库账号
            </summary>
            <param name="info">数据库信息</param>
            <returns>数据库账号</returns>
        </member>
        <member name="M:DataFactory.ConnectionHelper.getDbPassword(DataFactory.DBInfo)">
            <summary>
             数据库密码
            </summary>
            <param name="info">数据库信息</param>
            <returns>数据库密码</returns>
        </member>
        <member name="M:DataFactory.ConnectionHelper.getDbName(DataFactory.DBInfo)">
            <summary>
             数据库类型
            </summary>
            <param name="info">数据库信息</param>
            <returns>数据库类型</returns>
        </member>
        <member name="M:DataFactory.ConnectionHelper.getDbTimeout(DataFactory.DBInfo)">
            <summary>
             数据库超时
            </summary>
            <param name="info">数据库信息</param>
            <returns>数据库超时</returns>
        </member>
        <member name="M:DataFactory.ConnectionHelper.getDbCharset(DataFactory.DBInfo)">
            <summary>
             数据库编码
            </summary>
            <param name="info">数据库信息</param>
            <returns>数据库编码</returns>
        </member>
        <member name="M:DataFactory.ConnectionHelper.ConnectionString(DataFactory.DBInfo)">
            <summary>
            数据库连接串
            </summary>
            <param name="info">数据库信息</param>
            <returns>连接串</returns>
        </member>
        <member name="T:DataFactory.DBAdaptor`1">
            <summary>
            Linq数据库处理
            </summary>
        </member>
        <member name="M:DataFactory.DBAdaptor`1.#ctor(DataFactory.DBType,System.String,System.Int32)">
            <summary>
            Linq数据库处理
            </summary>
            <param name="ConnectionType">数据库类型</param>
            <param name="ConnectionString">连接串</param>
            <param name="Timeout">超时时间，毫秒</param>
        </member>
        <member name="M:DataFactory.DBAdaptor`1.Finalize">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DataFactory.DBAdaptor`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DataFactory.DBAdaptor`1.Dispose(System.Boolean)">
            <summary>
            释放连接
            </summary>
            <param name="disposing">是否释放</param>
        </member>
        <member name="P:DataFactory.DBAdaptor`1.DataBaseType">
            <summary>
            数据库连接类型
            </summary>
        </member>
        <member name="P:DataFactory.DBAdaptor`1.Connection">
            <summary>
            数据库连接串
            </summary>
        </member>
        <member name="P:DataFactory.DBAdaptor`1.TimeOut">
            <summary>
            数据库操作超时时间
            </summary>
        </member>
        <member name="M:DataFactory.DBAdaptor`1.Insert(`0)">
            <summary>
            根据条件查找对象
            </summary>
            <param name="Entity">条件</param>
            <returns></returns>
        </member>
        <member name="M:DataFactory.DBAdaptor`1.Update(`0)">
            <summary>
            更新实体
            </summary>
            <param name="Entity">实体</param>
        </member>
        <member name="M:DataFactory.DBAdaptor`1.Delete(`0)">
            <summary>
            删除实体
            </summary>
            <param name="Entity"></param>
        </member>
        <member name="M:DataFactory.DBAdaptor`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件查找对象
            </summary>
            <param name="whereLambda">条件</param>
            <returns></returns>
        </member>
        <member name="M:DataFactory.DBAdaptor`1.Query(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            查询符合条件的记录
            </summary>
            <param name="whereLambda">查询条件</param>
            <returns>符合条件的记录</returns>
        </member>
        <member name="M:DataFactory.DBAdaptor`1.List">
            <summary>
            查询所有记录列表
            </summary>
            <returns>所有记录</returns>
        </member>
        <member name="M:DataFactory.DBAdaptor`1.Page(System.Int32,System.Int32)">
            <summary>
            分页所有数据
            </summary>
            <param name="PageIndex">当前页，从1开始</param>
            <param name="PageSize">页面大小</param>
            <returns></returns>
        </member>
        <member name="M:DataFactory.DBAdaptor`1.Page(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            分页所有数据
            </summary>
            <param name="PageIndex">当前页，从1开始</param>
            <param name="PageSize">页面大小</param>
            <param name="PageCount">总页数</param>
            <param name="RecordCount">记录数</param>
            <returns></returns>
        </member>
        <member name="M:DataFactory.DBAdaptor`1.Select(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32,System.Int32)">
            <summary>
            分页查询数据
            </summary>
            <param name="whereLambda">查询条件</param>
            <param name="OrderBy">排序字段</param>
            <param name="PageIndex">当前页，从1开始</param>
            <param name="PageSize">页面大小</param>
            <returns>符合条件的记录</returns>
        </member>
        <member name="M:DataFactory.DBAdaptor`1.Select(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            分页查询数据
            </summary>
            <param name="whereLambda">查询条件</param>
            <param name="OrderBy">排序字段</param>
            <param name="PageIndex">当前页，从1开始</param>
            <param name="PageSize">页面大小</param>
            <param name="PageCount">总页数</param>
            <param name="RecordCount">记录数</param>
            <returns>符合条件的记录</returns>
        </member>
        <member name="T:DataFactory.DBController">
            <summary>
            数据库T-SQL基本操作
            </summary>
        </member>
        <member name="M:DataFactory.DBController.#ctor">
            <summary>
            数据库T-SQL基本操作
            </summary>
        </member>
        <member name="M:DataFactory.DBController.#ctor(DataFactory.DBType,System.String,System.Int32)">
            <summary>
            数据库T-SQL基本操作
            </summary>
            <param name="ConnectionType">数据库类型</param>
            <param name="ConnectionString">连接串</param>
            <param name="Timeout">超时时间，毫秒</param>
        </member>
        <member name="M:DataFactory.DBController.Finalize">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DataFactory.DBController.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DataFactory.DBController.Dispose(System.Boolean)">
            <summary>
            释放连接
            </summary>
            <param name="disposing">是否释放</param>
        </member>
        <member name="P:DataFactory.DBController.DataBaseType">
            <summary>
            数据库连接类型
            </summary>
        </member>
        <member name="P:DataFactory.DBController.Connection">
            <summary>
            数据库连接串
            </summary>
        </member>
        <member name="P:DataFactory.DBController.TimeOut">
            <summary>
            数据库操作超时时间
            </summary>
        </member>
        <member name="M:DataFactory.DBController.CheckConnection(System.String@)">
            <summary>
            检查数据库连接
            </summary>
            <param name="ErrorMessage">错误信息</param>
            <returns>是否连接成功</returns>
        </member>
        <member name="M:DataFactory.DBController.TableIsExist(System.String)">
            <summary>
            查询表是否存在
            </summary>
            <param name="TableName">表名称</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:DataFactory.DBController.ExecuteNonQuery(System.String)">
            <summary>
            数据库Insert,update,delete带返回执行数
            </summary>
            <param name="sql">SQL语句</param>
            <returns>影响数量</returns>
        </member>
        <member name="M:DataFactory.DBController.IsExist(System.String)">
            <summary>
            判断是否存在记录
            </summary>
            <param name="sql">T-SQL</param>
            <returns>TRUE为存在，False为不存在</returns>
        </member>
        <member name="M:DataFactory.DBController.Find(System.String)">
            <summary>
            查询数据记录
            </summary>
            <param name="sql">T-SQL</param>
            <returns>TRUE为存在，False为不存在</returns>
        </member>
        <member name="M:DataFactory.DBController.ExecuteScalar(System.String)">
            <summary>
            返回第一行第一列数据
            </summary>
            <param name="sql">T-SQL</param>
            <returns></returns>
        </member>
        <member name="M:DataFactory.DBController.getDataTable(System.String)">
            <summary>
            获取查询数据
            </summary>
            <param name="sql">T-SQL</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:DataFactory.DBController.getDataTable(System.String,System.Int32,System.Int32@,System.Int32@,System.String)">
            <summary>
            获取查询数据
            </summary>
            <param name="sql">T-SQL</param>
            <param name="PageSize">分页大小</param>
            <param name="RecCount">返回查询记录数</param>
            <param name="PageCount">返回总页数</param>
            <param name="TableName">表名</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:DataFactory.DBController.getDataTableByRam(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Int32@,System.Int32@)">
            <summary>
            内存分页
            </summary>
            <param name="PageIndex">当前页</param>
            <param name="PageSize">分页大小</param>
            <param name="DisplayField">字段列，每个字段用,分开</param>
            <param name="TableName">表名，支持（） k 视图方式</param>
            <param name="Where">查询条件</param>
            <param name="OrderBy">排序语句</param>
            <param name="GroupBy">GROUP BY 字段</param>
            <param name="RecodeCount">返回记录数</param>
            <param name="PageCount">返回页数</param>
            <returns>查询结果</returns>
        </member>
        <member name="M:DataFactory.DBController.getDataTableByDB(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32@,System.Int32@)">
            <summary>
            数据库分页
            </summary>
            <param name="PageIndex">当前页</param>
            <param name="PageSize">分页大小</param>
            <param name="DisplayField">字段列，每个字段用,分开</param>
            <param name="TableName">表名，支持（） k 视图方式</param>
            <param name="Where">查询条件</param>
            <param name="OrderField">排序字段</param>
            <param name="OrderBy">排序语句</param>
            <param name="GroupBy">GROUP BY 字段</param>
            <param name="RecodeCount">返回记录数</param>
            <param name="PageCount">返回页数</param>
            <returns>查询结果</returns>
        </member>
        <member name="T:DataFactory.DBHelper">
            <summary>
            T-SQL数据绑定到控件
            </summary>
        </member>
        <member name="M:DataFactory.DBHelper.#ctor">
            <summary>
            T-SQL数据绑定到控件
            </summary>
        </member>
        <member name="M:DataFactory.DBHelper.#ctor(DataFactory.DBType,System.String,System.Int32)">
            <summary>
            T-SQL数据绑定到控件
            </summary>
            <param name="ConnectionType">数据库类型</param>
            <param name="ConnectionString">连接串</param>
            <param name="Timeout">超时时间，毫秒</param>
        </member>
        <member name="M:DataFactory.DBHelper.Finalize">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DataFactory.DBHelper.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DataFactory.DBHelper.Dispose(System.Boolean)">
            <summary>
            释放连接
            </summary>
            <param name="disposing">是否释放</param>
        </member>
        <member name="M:DataFactory.DBHelper.bindCheckButtonList(System.String,System.Web.UI.WebControls.CheckBoxList,System.String,System.String,System.String)">
            <summary>
            绑定数据到CheckBoxList
            </summary>
            <param name="sql">T-SQL</param>
            <param name="ClassName">控件</param>
            <param name="TextField">显示列</param>
            <param name="ValueField">值列</param>
        </member>
        <member name="M:DataFactory.DBHelper.bindDropDownList(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            绑定数据到HTML DropDownList
            </summary>
            <param name="sql">T-SQL</param>
            <param name="ClassName">控件</param>
            <param name="TextField">显示列</param>
            <param name="ValueField">值列</param>
        </member>
        <member name="M:DataFactory.DBHelper.bindRadioButtonList(System.String,System.Web.UI.WebControls.RadioButtonList,System.String,System.String,System.String)">
            <summary>
            绑定数据到RadioButtonList
            </summary>
            <param name="sql">T-SQL</param>
            <param name="ClassName">控件</param>
            <param name="TextField">显示列</param>
            <param name="ValueField">值列</param>
        </member>
        <member name="M:DataFactory.DBHelper.bindRadioButtonList(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            绑定数据到HTML DropDownList
            </summary>
            <param name="sql">T-SQL</param>
            <param name="ClassName">控件</param>
            <param name="TextField">显示列</param>
            <param name="ValueField">值列</param>
        </member>
        <member name="T:DataFactory.DBSelector`1">
            <summary>
            实体转T-SQL
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:DataFactory.DBSelector`1.#ctor">
            <summary>
            数据库T-SQL基本操作
            </summary>
        </member>
        <member name="M:DataFactory.DBSelector`1.#ctor(DataFactory.DBType,System.String,System.Int32)">
            <summary>
            数据库T-SQL基本操作
            </summary>
            <param name="ConnectionType">数据库类型</param>
            <param name="ConnectionString">连接串</param>
            <param name="Timeout">超时时间，毫秒</param>
        </member>
        <member name="M:DataFactory.DBSelector`1.Finalize">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DataFactory.DBSelector`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DataFactory.DBSelector`1.Dispose(System.Boolean)">
            <summary>
            释放连接
            </summary>
            <param name="disposing">是否释放</param>
        </member>
        <member name="P:DataFactory.DBSelector`1.DataBaseType">
            <summary>
            数据库连接类型
            </summary>
        </member>
        <member name="P:DataFactory.DBSelector`1.Connection">
            <summary>
            数据库连接串
            </summary>
        </member>
        <member name="P:DataFactory.DBSelector`1.TimeOut">
            <summary>
            数据库操作超时时间
            </summary>
        </member>
        <member name="M:DataFactory.DBSelector`1.Insert(`0)">
            <summary>
            插入实体
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:DataFactory.DBSelector`1.Update(`0)">
            <summary>
            更新实体
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:DataFactory.DBSelector`1.Delete(`0)">
            <summary>
            删除实体
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:DataFactory.DBSelector`1.List">
            <summary>
            查询所有结果
            </summary>
            <returns>所有结果</returns>
        </member>
        <member name="M:DataFactory.DBSelector`1.Page(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            查询并分页
            </summary>
            <param name="PageIndex">当前页</param>
            <param name="PageSize">分页大小</param>
            <param name="PageCount">总页数</param>
            <param name="RecordCount">总记录数</param>
            <returns>结果</returns>
        </member>
        <member name="M:DataFactory.DBSelector`1.Find(System.Int32)">
            <summary>
            查找
            </summary>
            <param name="ID">主键键值</param>
            <returns>找到为实体，找不到为NULL</returns>
        </member>
        <member name="M:DataFactory.DBSelector`1.CreatTable">
            <summary>
            创建表
            </summary>
            <returns>执行结果</returns>
        </member>
        <member name="M:DataFactory.DBSelector`1.TableIsExist">
            <summary>
            表是否存在
            </summary>
            <returns>是否存在</returns>
        </member>
        <member name="M:DataFactory.DBSelector`1.CheckDataBase(System.String@)">
            <summary>
            检测数据库连接
            </summary>
            <param name="errmsg">错误信息</param>
            <returns>连接结果</returns>
        </member>
        <member name="T:DataFactory.DBType">
            <summary>
            支持的数据库类型
            </summary>
        </member>
        <member name="F:DataFactory.DBType.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:DataFactory.DBType.MSSQL">
            <summary>
            MSSQL,支持从2000,2005,2008,2012
            </summary>
        </member>
        <member name="F:DataFactory.DBType.Access">
            <summary>
            Access
            </summary>
        </member>
        <member name="F:DataFactory.DBType.MYSQL">
            <summary>
            MYSQL,支持5.0及以上版本
            </summary>
        </member>
        <member name="F:DataFactory.DBType.Oracle">
            <summary>
            Oracle,支持10g及以上版本
            </summary>
        </member>
        <member name="F:DataFactory.DBType.SQLite">
            <summary>
            SQLite
            </summary>
        </member>
        <member name="F:DataFactory.DBType.PostgreSQL">
            <summary>
            PostgreSQL
            </summary>
        </member>
        <member name="T:DataFactory.DBInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:DataFactory.DBInfo.Enable">
            <summary>
            启用配置
            </summary>
        </member>
        <member name="P:DataFactory.DBInfo.Mode">
            <summary>
            启用配置
            </summary>
        </member>
        <member name="P:DataFactory.DBInfo.Url">
            <summary>
            数据库地址
            </summary>
        </member>
        <member name="P:DataFactory.DBInfo.Port">
            <summary>
            数据库端口
            </summary>
        </member>
        <member name="P:DataFactory.DBInfo.User">
            <summary>
            数据库账号
            </summary>
        </member>
        <member name="P:DataFactory.DBInfo.Password">
            <summary>
            数据库密码
            </summary>
        </member>
        <member name="P:DataFactory.DBInfo.DataBaseName">
            <summary>
            数据库名称
            </summary>
        </member>
        <member name="P:DataFactory.DBInfo.TimeOut">
            <summary>
            超时时间，ms
            </summary>
        </member>
        <member name="P:DataFactory.DBInfo.Charset">
            <summary>
            字符编码
            </summary>
        </member>
    </members>
</doc>
